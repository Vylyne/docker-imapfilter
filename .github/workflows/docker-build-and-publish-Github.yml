name: Build and Deploy to Github Packages
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - "*" # Trigger on push to any branch
      - "!temp/*" # Exclude Temp braches
      - "!utility/*" # Exclude Utility branches
      - "!upstream/*" # Exclude Upstream Branches Really just using them for upstream PRs
      - "!upstream-main" # current Upstrema PR braanch
    paths:
      - Dockerfile
      - run-imapfilter.sh
      - docker-entrypoint.sh
  pull_request:
    branches:
      - "*" # Trigger on PR against any branch
      - "!temp/*" # Exclude Temp braches
      - "!utility/*" # Exclude Utility branches
      - "!upstream/*" # Exclude Upstream Branches Really just using them for upstream PRs
      - "!upstream-main" # current Upstrema PR braanch
  workflow_dispatch:

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: Dockerfile
          config: .hadolint.yaml # Restored config file reference
          
  grab-imapfilter-latest:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - id: imapfilter-latest-tag
        run: |
          # Fetch the latest tag from the upstream imapfilter repository
          tag="$(curl --location --silent https://api.github.com/repos/lefcha/imapfilter/tags | jq -r '.[].name' | head -1)"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
    outputs:
      tag: ${{ steps.imapfilter-latest-tag.outputs.tag }}

  build:
    needs: grab-imapfilter-latest
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # --- BUILD 1: Latest development/master branch of imapfilter (No suffix) ---
          - flavor: |
              latest=false
              suffix= # Suffix is now empty (the default version)
            args:
              imapfilter_spec=master
          # --- BUILD 2: Latest stable version tag of imapfilter (-stable suffix) ---
          - flavor: |
              latest=false
              suffix=-stable # Suffix clearly indicates stable release tag
            args: |
              imapfilter_spec=${{ needs.grab-imapfilter-latest.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
        with:
          # Spurious segfaults when compiling
          # https://github.com/docker/setup-qemu-action/issues/188
          image: tonistiigi/binfmt:qemu-v8.1.5
      - uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata (tags, labels)
        uses: docker/metadata-action@v5
        id: meta
        with:
          flavor: ${{ matrix.flavor }}
          images: |
            # Primary target: GitHub Container Registry (GHCR)
            ghcr.io/${{ github.repository }}
          tags: |
            # 1. Tag with 'latest' and 'main' only on push to the 'main' branch (not PRs)
            # These tags now check for the '-stable' suffix.
            type=raw,value=latest,enable=${{ matrix.flavor.suffix == '-stable' && github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
            type=raw,value=main,enable=${{ matrix.flavor.suffix == '-stable' && github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

            # 2. Tag with 'current' only on push to the 'main' branch and for the master build
            # This tag now checks for the EMPTY suffix (the default build).
            type=raw,value=current,enable=${{ matrix.flavor.suffix == '' && github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}

            # 3. Tag with the branch name (e.g., 'my-feature' or 'my-feature-stable')
            type=ref,event=branch

            # 4. Tag with PR number for pull requests
            type=ref,event=pr

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: ${{ matrix.args }}
